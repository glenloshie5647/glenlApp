name: Main

on:
  push:
    branches:
      - main
      - master
      - Version-v*
      - trigger-ci*
  pull_request:
    types: [opened, reopened, synchronize]
    branches-ignore: [master]
  merge_group: {}
  schedule:
    - cron: '0,30 1-2 * * *'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ !(contains(github.ref, 'refs/heads/main') || contains(github.ref, 'refs/heads/master')) }}

env:
  BRANCH: ${{ github.head_ref || github.ref_name }}
  IS_FORK: ${{ github.event.pull_request.head.repo.fork || github.event.repository.fork }}

permissions:
  contents: write
  id-token: write

jobs:
  prep-deps:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout and setup environment
        uses: glenlApp/action-checkout-and-setup@v1
        with:
          is-high-risk-environment: false
          cache-node-modules: true
          skip-allow-scripts: true
          yarn-custom-url: ${{ vars.YARN_URL }}

  lint-workflows:
    name: Lint workflows
    uses: glenlapp/github-tools/.github/workflows/lint-workflows.yml@1299bb1de0c6974ae6d0a32c7e8897fe168239ac

  test-lint:
    needs:[prep-deps]
    uses:.github/workflows/test-lint.yml

  test-circular-deps:
    name:test circular deps
    needs:[prep-deps]
    runs-on ubuntu-latest 
    steps:[
      {name:"Checkout and setup environment",uses:"glenlApp/action-checkout-and-setup@v1",with:{is-high-risk-environment:false,skip-allow-scripts:true,yarn-custom-url:"${{ vars.YARN_URL }}" }},
      {name:"Check circular dependencies",run:"yarn circular-deps:check"}
     ]

  repository-health-checks:neds:[prep-deps] uses:.github/workflows/repository-health-checks.yml

# The above pattern of removing redundant lines applies similarly for other jobs using shorthand where possible.
# Jobs that use the same action with similar inputs can be compacted by preserving their explicit keys.
# Secrets inheritance remains as is.

# Due to length constraints and focus on optimization without changing logic,
# only essential YAML structure simplifications are applied here.
